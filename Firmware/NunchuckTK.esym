D G "__PCM__" 0 0 ""4.057""
D G "__DEVICE__" 0 0 ""
D G "__DATE__" 0 0 ""10-nov-15""
D G "__TIME__" 0 0 ""23:43:48"" "/                                                                                                         ///"
d G "PIN_A0" 1 19 "40"
d G "PIN_A1" 1 20 "41"
d G "PIN_A2" 1 21 "42"
d G "PIN_A3" 1 22 "43"
d G "PIN_A4" 1 23 "44"
d G "PIN_A5" 1 24 "45"
d G "PIN_C0" 1 26 "56"
d G "PIN_C1" 1 27 "57"
d G "PIN_C2" 1 28 "58"
d G "PIN_C3" 1 29 "59"
d G "PIN_C4" 1 30 "60"
d G "PIN_C5" 1 31 "61"
d G "FALSE" 1 34 "0"
d G "TRUE" 1 35 "1"
d G "BYTE" 1 37 "int8"
d G "BOOLEAN" 1 38 "int1"
d G "getc" 1 40 "getch"
d G "fgetc" 1 41 "getch"
d G "getchar" 1 42 "getch"
d G "putc" 1 43 "putchar"
d G "fputc" 1 44 "putchar"
d G "fgets" 1 45 "gets"
d G "fputs" 1 46 "puts"
d G "WDT_FROM_SLEEP" 1 51 "3"
d G "WDT_TIMEOUT" 1 52 "11"
d G "MCLR_FROM_SLEEP" 1 53 "19"
d G "MCLR_FROM_RUN" 1 54 "27"
d G "NORMAL_POWER_UP" 1 55 "25"
d G "BROWNOUT_RESTART" 1 56 "26"
d G "RTCC_INTERNAL" 1 64 "0"
d G "RTCC_EXT_L_TO_H" 1 65 "32"
d G "RTCC_EXT_H_TO_L" 1 66 "48"
d G "RTCC_DIV_1" 1 68 "8"
d G "RTCC_DIV_2" 1 69 "0"
d G "RTCC_DIV_4" 1 70 "1"
d G "RTCC_DIV_8" 1 71 "2"
d G "RTCC_DIV_16" 1 72 "3"
d G "RTCC_DIV_32" 1 73 "4"
d G "RTCC_DIV_64" 1 74 "5"
d G "RTCC_DIV_128" 1 75 "6"
d G "RTCC_DIV_256" 1 76 "7"
d G "RTCC_8_BIT" 1 79 "0"
d G "WDT_18MS" 1 91 "0x8008"
d G "WDT_36MS" 1 92 "9"
d G "WDT_72MS" 1 93 "10"
d G "WDT_144MS" 1 94 "11"
d G "WDT_288MS" 1 95 "12"
d G "WDT_576MS" 1 96 "13"
d G "WDT_1152MS" 1 97 "14"
d G "WDT_2304MS" 1 98 "15"
d G "WDT_ON" 1 102 "0x4100"
d G "WDT_OFF" 1 103 "0"
d G "WDT_DIV_16" 1 104 "0x100"
d G "WDT_DIV_8" 1 105 "0x300"
d G "WDT_DIV_4" 1 106 "0x500"
d G "WDT_DIV_2" 1 107 "0x700"
d G "WDT_TIMES_1" 1 108 "0x900" "Default"
d G "WDT_TIMES_2" 1 109 "0xB00"
d G "WDT_TIMES_4" 1 110 "0xD00"
d G "WDT_TIMES_8" 1 111 "0xF00"
d G "WDT_TIMES_16" 1 112 "0x1100"
d G "WDT_TIMES_32" 1 113 "0x1300"
d G "WDT_TIMES_64" 1 114 "0x1500"
d G "WDT_TIMES_128" 1 115 "0x1700"
d G "T1_DISABLED" 1 121 "0"
d G "T1_INTERNAL" 1 122 "0x85"
d G "T1_EXTERNAL" 1 123 "0x87"
d G "T1_EXTERNAL_SYNC" 1 124 "0x83"
d G "T1_CLK_OUT" 1 126 "8"
d G "T1_DIV_BY_1" 1 128 "0"
d G "T1_DIV_BY_2" 1 129 "0x10"
d G "T1_DIV_BY_4" 1 130 "0x20"
d G "T1_DIV_BY_8" 1 131 "0x30"
d G "T1_GATE" 1 134 "0x40"
d G "T1_GATE_INVERTED" 1 135 "0xC0"
d G "UART_ADDRESS" 1 141 "2"
d G "UART_DATA" 1 142 "4"
d G "UART_AUTODETECT" 1 143 "8"
d G "UART_AUTODETECT_NOWAIT" 1 144 "9"
d G "UART_WAKEUP_ON_RDA" 1 145 "10"
d G "UART_SEND_BREAK" 1 146 "13"
d G "NC_NC_NC_NC" 1 150 "0x0ff07"
d G "NC_NC" 1 151 "0x0ff07"
d G "A0_A1" 1 152 "0x3ff02"
d G "A1_VR_OUT_ON_A2" 1 153 "0x6fb03"
d G "A1_VR" 1 154 "0x2ff04"
d G "A0_A1_OUT_ON_A2" 1 155 "0x3fb01"
d G "VREF_LOW" 1 162 "0xa0"
d G "VREF_HIGH" 1 163 "0x80"
d G "OSC_31KHZ" 1 169 "1"
d G "OSC_125KHZ" 1 170 "0x11"
d G "OSC_250KHZ" 1 171 "0x21"
d G "OSC_500KHZ" 1 172 "0x31"
d G "OSC_1MHZ" 1 173 "0x41"
d G "OSC_2MHZ" 1 174 "0x51"
d G "OSC_4MHZ" 1 175 "0x61"
d G "OSC_8MHZ" 1 176 "0x71"
d G "OSC_INTRC" 1 177 "1"
d G "OSC_NORMAL" 1 178 "0"
d G "OSC_STATE_STABLE" 1 180 "4"
d G "OSC_31KHZ_STABLE" 1 181 "2"
d G "ADC_OFF" 1 189 "0" "ADC Off"
d G "ADC_CLOCK_DIV_2" 1 190 "0x100"
d G "ADC_CLOCK_DIV_4" 1 191 "0x40"
d G "ADC_CLOCK_DIV_8" 1 192 "0x10"
d G "ADC_CLOCK_DIV_32" 1 193 "0x20"
d G "ADC_CLOCK_DIV_16" 1 194 "0x50"
d G "ADC_CLOCK_DIV_64" 1 195 "0x60"
d G "ADC_CLOCK_INTERNAL" 1 196 "0x30" "Internal 2-6us"
d G "sAN0" 1 199 "1" "| A0"
d G "sAN1" 1 200 "2" "| A1"
d G "sAN2" 1 201 "4" "| A2"
d G "sAN3" 1 202 "8" "| A4"
d G "sAN4" 1 203 "16" "| C0"
d G "sAN5" 1 204 "32" "| C1"
d G "sAN6" 1 205 "64" "| C2"
d G "sAN7" 1 206 "128" "| C3"
d G "NO_ANALOGS" 1 207 "0" "None"
d G "ALL_ANALOG" 1 208 "255" "A0 A1 A2 A4 C0 C1 C2 C3"
d G "VSS_VDD" 1 211 "0x0000" "Range 0-Vdd"
d G "VSS_VREF" 1 212 "0x4000" "Range 0-VrefH"
d G "ADC_START_AND_READ" 1 217 "7" "This is the default if nothing is specified"
d G "ADC_START_ONLY" 1 218 "1"
d G "ADC_READ_ONLY" 1 219 "6"
d G "L_TO_H" 1 231 "0x40"
d G "H_TO_L" 1 232 "0"
d G "GLOBAL" 1 234 "0x0BC0"
d G "INT_RTCC" 1 235 "0x0B20"
d G "INT_EXT" 1 236 "0x0B10"
d G "INT_AD" 1 237 "0x8C40"
d G "INT_RDA" 1 238 "0x8C20"
d G "INT_TIMER1" 1 239 "0x8C01"
d G "INT_TIMER0" 1 240 "0x0B20"
d G "INT_EEPROM" 1 241 "0x8C80"
d G "INT_COMP" 1 242 "0x8C08"
d G "INT_RA" 1 243 "0xFF0B08"
d G "INT_COMP2" 1 244 "0x8C10"
d G "INT_OSC_FAIL" 1 245 "0x8C04"
d G "INT_TBE" 1 246 "0x8C02"
d G "INT_RA0" 1 247 "0x010B08"
d G "INT_RA1" 1 248 "0x020B08"
d G "INT_RA2" 1 249 "0x040B08"
d G "INT_RA3" 1 250 "0x080B08"
d G "INT_RA4" 1 251 "0x100B08"
d G "INT_RA5" 1 252 "0x200B08"
D G "SQUARE" 0 37 ""
D G "BUTTON1" 0 59 "pin_a0"
D G "LEFT" 0 60 "pin_a1"
D G "RIGHT" 0 61 "pin_a2"
D G "BUTTON3" 0 62 "pin_a3"
D G "DOWN" 0 63 "pin_a4"
D G "UP" 0 64 "pin_a5"
D G "BUTTON2" 0 66 "pin_c0"
D G "P_SDA" 0 67 "pin_c1"
D G "P_SCL" 0 68 "pin_c2"
D G "LED" 0 69 "pin_c3"
D G "p_TXD" 0 70 "pin_c4"
D G "p_RXD" 0 71 "pin_c5"
C L "read_SCL" 2 2 7 "FUNCTION"
F G "read_SCL" 2 11 "int8()" "Set SCL as input and return current level of line, 0 or 1"
F G "read_SDA" 2 12 "int8()" "Set SDA as input and return current level of line, 0 or 1"
F G "clear_SCL" 2 13 "void()" "Actively drive SCL signal low"
F G "clear_SDA" 2 14 "void()" "Actively drive SDA signal low"
F G "arbitration_lost" 2 15 "void()"
V L "send_start" 2 16 "int8"
V L "send_stop" 2 16 "int8"
V L "byte_" 2 16 "int8"
F G "i2c_write_byte" 2 16 "int8(int8 send_start,int8 send_stop,int8 byte_)"
V L "nack" 2 17 "int8"
V L "send_stop" 2 17 "int8"
F G "i2c_read_byte" 2 17 "int8(int8 nack,int8 send_stop)"
D G "SCL_PIN" 2 21 "P_SCL"
D G "SDA_PIN" 2 22 "P_SDA"
C L "i2c_read_byte" 3 2 14 "FUNCTION"
V G "started" 3 19 "int1"
C L "i2c_read_byte" 3 2 1 "FUNCTION"
V G "have_arbitration" 3 20 "int1"
C L "i2c_read_byte" 3 2 1 "FUNCTION"
F G "i2c_start_cond" 3 26 "void()"
C L "i2c_start_cond" 3 2 2 "FUNCTION"
C L "i2c_start_cond" 3 2 1 "FUNCTION"
C L "i2c_start_cond" 3 2 2 "FUNCTION"
C L "i2c_start_cond" 3 2 2 "FUNCTION"
C L "i2c_start_cond" 3 2 1 "FUNCTION"
C L "i2c_start_cond" 3 2 1 "FUNCTION"
F G "i2c_stop_cond" 3 47 "void()" "set SDA to 0"
C L "i2c_stop_cond" 3 2 2 "FUNCTION"
C L "i2c_stop_cond" 3 2 1 "FUNCTION"
C L "i2c_stop_cond" 3 2 3 "FUNCTION"
C L "i2c_stop_cond" 3 2 1 "FUNCTION"
C L "i2c_write_bit" 3 2 1 "FUNCTION"
V L "bit" 3 66 "int8"
F G "i2c_write_bit" 3 66 "void(int8 bit)"
C L "i2c_write_bit" 3 2 1 "FUNCTION"
C L "i2c_write_bit" 3 2 2 "FUNCTION"
C L "i2c_write_bit" 3 2 2 "FUNCTION"
C L "i2c_write_bit" 3 2 1 "FUNCTION"
C L "i2c_read_bit" 3 2 1 "FUNCTION"
F G "i2c_read_bit" 3 86 "int8()"
V L "bit" 3 87 "int1" "Let the slave drive data"
C L "i2c_read_bit" 3 2 1 "FUNCTION"
C L "i2c_read_bit" 3 2 2 "FUNCTION"
C L "i2c_read_bit" 3 2 1 "FUNCTION"
C L "i2c_read_bit" 3 2 1 "FUNCTION"
C L "i2c_write_byte" 3 2 1 "FUNCTION"
V L "send_start" 3 102 "int8"
V L "send_stop" 3 103 "int8"
V L "byte_" 3 104 "int8"
F G "i2c_write_byte" 3 104 "int8(int8 send_start,int8 send_stop,int8 byte_)"
V L "bit" 3 105 "int8"
V L "nack" 3 106 "int1"
C L "i2c_read_byte" 3 2 1 "FUNCTION"
V L "nack" 3 122 "int8"
V L "send_stop" 3 122 "int8"
F G "i2c_read_byte" 3 122 "int8(int8 nack,int8 send_stop)"
V L "byte_" 3 123 "int8"
V L "bits" 3 124 "int8"
C L "read_SCL" 3 2 1 "FUNCTION"
F G "read_SCL" 3 136 "int8()"
C L "read_SDA" 3 2 1 "FUNCTION"
F G "read_SDA" 3 140 "int8()"
C L "clear_SCL" 3 2 1 "FUNCTION"
F G "clear_SCL" 3 144 "void()"
C L "clear_SDA" 3 2 1 "FUNCTION"
F G "clear_SDA" 3 148 "void()"
F G "arbitration_lost" 3 151 "void()" ""
D G "bit_b1c" 0 96 "0" "Bits do registro de configuração de operação"
D G "bit_b1z" 0 97 "1"
D G "bit_b2c" 0 98 "2"
D G "bit_b2z" 0 99 "3"
D G "bit_afbc" 0 100 "4"
D G "bit_afbz" 0 101 "5"
D G "bit_useax" 0 102 "6"
D G "bit_useay" 0 103 "7"
D G "bit_Right" 0 105 "0" "Bits de opção de inicialização"
D G "bit_Left" 0 106 "1"
D G "bit_Up" 0 107 "2"
D G "bit_Down" 0 108 "3"
D G "bit_Z" 0 109 "4"
D G "bit_C" 0 110 "5"
D G "treshold" 0 112 "32" "Limiar em torno do centro da manete analógica"
D G "upper" 0 113 "128+treshold" "Limite superior"
D G "lower" 0 114 "128-treshold" "Limite inferior"
D G "tresholdA" 0 115 "64" "Limiar em torno do centro dos acelerômetros"
D G "MAX_TRIES" 0 116 "4" "Tentativas de leituras iguais na inicialização."
D G "MSG_ERRINIT" 0 118 "0x08"
D G "MSG_CONFIG" 0 119 "0x3f"
D G "config_address" 0 121 "0" "Configuração do adaptador"
D G "calibX_address" 0 122 "1" "Calibração do acelerometro X (MSB)"
D G "calibY_address" 0 123 "2" "Calibração do acelerometro X (MSB)"
C L "desativa_saidas" 0 120 5 "FUNCTION"
F G "desativa_saidas" 0 135 "void()" "Inicializa Nunchuck e retorna estado Z=não respondeu"
F G "init_Nunchuck" 0 138 "int8()" "Faz leitura do Nunchuck e retorna estado Z=não respondeu"
F G "read_Nunchuck" 0 141 "int8()" "Pisca o LED para indicar uma mensagem"
V L "codigo" 0 144 "int8"
F G "pisca_msg" 0 144 "void(int8 codigo)" "Configura nunchuck conforme posição da manete analogica e botoes durante o startup"
V L "opcoes" 0 147 "int8"
F G "configura_nunchuck" 0 147 "void(int8 opcoes)" "/                                                                                                         ///"
C L "configura_nunchuck" 0 120 3 "FUNCTION"
V G "config" 0 160 "int8" "Configuração do adaptador"
V G "opcao_startup" 0 161 "int8" "Opcao de inicializacao"
V G "temp" 0 162 "int8" "variavel temporaria"
V G "tries" 0 163 "int8" "quantidade de tentativas de leitura na inicialização"
V G "B1C" 0 165 "int1" "Usa ou não Botão 1 conforme estado do botão C"
V G "B1Z" 0 166 "int1" "Usa ou não Botão 1 conforme estado do botão Z"
V G "B2C" 0 167 "int1" "Usa ou não Botão 2 conforme estado do botão C"
V G "B2Z" 0 168 "int1" "Usa ou não Botão 2 conforme estado do botão Z"
V G "AFBC" 0 169 "int1" "Auto Fire Botao C"
V G "AFBZ" 0 170 "int1" "Auto Fire Botao Z"
V G "USEAX" 0 171 "int1" "Opção de uso do acelerômetro X"
V G "USEAY" 0 172 "int1" "Opção de uso do acelerômetro Y"
V G "MODAF" 0 174 "int1" "Modulador do Auto Fire;"
V G "X" 0 176 "int8"
V G "Y" 0 176 "int8" "Eixos X e Y da manete mais ."
V G "Z" 0 177 "int1"
V G "C" 0 177 "int1" "Botões"
V G "sX" 0 179 "int8"
V G "sY" 0 179 "int8" "Salva valor das manetes"
C L "configura_nunchuck" 0 120 1 "FUNCTION"
V G "AX" 0 182 "int16"
V G "AY" 0 182 "int16"
V G "AZ" 0 182 "int16" "Eixos X, Y e Z dos acelerômtros"
V G "calibrAX" 0 184 "int16" "Valor de calibração do acelerometro X"
V G "calibrAY" 0 185 "int16" "Valor de calibração do acelerometro Y"
V G "AFModCont" 0 187 "int8"
C L "configura_nunchuck" 0 120 1 "FUNCTION"
F G "MAIN" 0 189 "void()" "init hardware"
C L "MAIN" 0 120 1 "FUNCTION"
C L "MAIN" 0 120 1 "FUNCTION"
C L "MAIN" 0 120 1 "FUNCTION"
C L "MAIN" 0 120 1 "FUNCTION"
C L "MAIN" 0 120 1 "FUNCTION"
C L "MAIN" 0 120 1 "FUNCTION"
C L "MAIN" 0 120 1 "FUNCTION"
C L "MAIN" 0 120 1 "FUNCTION"
C L "MAIN" 0 120 1 "FUNCTION"
C L "MAIN" 0 120 1 "FUNCTION"
C L "MAIN" 0 120 1 "FUNCTION"
C L "MAIN" 0 120 2 "FUNCTION"
C L "MAIN" 0 120 1 "FUNCTION"
C L "MAIN" 0 120 1 "FUNCTION"
C L "MAIN" 0 120 1 "FUNCTION"
C L "MAIN" 0 120 1 "FUNCTION"
C L "MAIN" 0 120 2 "FUNCTION"
C L "MAIN" 0 120 1 "FUNCTION"
C L "MAIN" 0 120 2 "FUNCTION"
C L "MAIN" 0 120 1 "FUNCTION"
C L "MAIN" 0 120 2 "FUNCTION"
C L "MAIN" 0 120 1 "FUNCTION"
C L "MAIN" 0 120 1 "FUNCTION"
C L "MAIN" 0 120 1 "FUNCTION"
C L "MAIN" 0 120 1 "FUNCTION"
C L "MAIN" 0 120 1 "FUNCTION"
C L "MAIN" 0 120 2 "FUNCTION"
C L "MAIN" 0 120 1 "FUNCTION"
C L "MAIN" 0 120 1 "FUNCTION"
C L "desativa_saidas" 0 120 5 "FUNCTION"
F G "desativa_saidas" 0 320 "void()"
C L "init_Nunchuck" 0 120 2 "FUNCTION"
F G "init_Nunchuck" 0 335 "int8()"
C L "read_Nunchuck" 0 120 1 "FUNCTION"
F G "read_Nunchuck" 0 354 "int8()"
V L "temp" 0 356 "int8" "Send request"
C L "read_Nunchuck" 0 120 1 "FUNCTION"
C L "read_Nunchuck" 0 120 2 "FUNCTION"
C L "read_Nunchuck" 0 120 1 "FUNCTION"
C L "read_Nunchuck" 0 120 1 "FUNCTION"
C L "read_Nunchuck" 0 120 1 "FUNCTION"
C L "read_Nunchuck" 0 120 1 "FUNCTION"
C L "read_Nunchuck" 0 120 1 "FUNCTION"
C L "read_Nunchuck" 0 120 1 "FUNCTION"
C L "read_Nunchuck" 0 120 1 "FUNCTION"
C L "read_Nunchuck" 0 120 1 "FUNCTION"
C L "pisca_msg" 0 120 2 "FUNCTION"
V L "codigo" 0 388 "int8"
F G "pisca_msg" 0 388 "void(int8 codigo)" "int k;"
C L "pisca_msg" 0 120 1 "FUNCTION"
C L "pisca_msg" 0 120 1 "FUNCTION"
C L "pisca_msg" 0 120 1 "FUNCTION"
C L "pisca_msg" 0 120 1 "FUNCTION"
C L "pisca_msg" 0 120 1 "FUNCTION"
C L "pisca_msg" 0 120 1 "FUNCTION"
C L "configura_nunchuck" 0 120 2 "FUNCTION"
V L "opcoes" 0 412 "int8"
F G "configura_nunchuck" 0 412 "void(int8 opcoes)"
V L "conf" 0 413 "int8"
V L "a" 0 413 "int8"
C L "configura_nunchuck" 0 120 2 "FUNCTION"
C L "configura_nunchuck" 0 120 1 "FUNCTION"
C L "configura_nunchuck" 0 120 1 "FUNCTION"
C L "configura_nunchuck" 0 120 1 "FUNCTION"
C L "configura_nunchuck" 0 120 1 "FUNCTION"
C L "configura_nunchuck" 0 120 1 "FUNCTION"
C L "configura_nunchuck" 0 120 2 "FUNCTION"
C L "configura_nunchuck" 0 120 1 "FUNCTION"
C L "configura_nunchuck" 0 120 1 "FUNCTION"
C L "configura_nunchuck" 0 120 1 "FUNCTION"
C L "configura_nunchuck" 0 120 1 "FUNCTION"
C L "configura_nunchuck" 0 120 1 "FUNCTION"
C L "configura_nunchuck" 0 120 1 "FUNCTION"
C L "configura_nunchuck" 0 120 1 "FUNCTION"
C L "configura_nunchuck" 0 120 1 "FUNCTION"
C L "configura_nunchuck" 0 120 1 "FUNCTION"
C L "configura_nunchuck" 0 120 1 "FUNCTION"
C L "configura_nunchuck" 0 120 1 "FUNCTION"
C L "configura_nunchuck" 0 120 1 "FUNCTION"
C L "configura_nunchuck" 0 120 1 "FUNCTION"
C L "configura_nunchuck" 0 120 1 "FUNCTION"
C L "configura_nunchuck" 0 120 1 "FUNCTION"
F B "reset_cpu" 0 0
F B "abs" 1 0
F B "sleep_ulpwu" 1 0
F B "sleep" 0 0
F B "delay_cycles" 1 0
F B "read_bank" 2 0
F B "write_bank" 3 0
F B "shift_left" 2 2
F B "shift_right" 2 2
F B "rotate_left" 2 0
F B "rotate_right" 2 0
F B "_mul" 2 0
F B "strcpy" 2 0
F B "memset" 3 0
F B "memcpy" 3 0
F B "isamoung" 2 0
F B "isamong" 2 0
F B "bit_set" 2 0
F B "bit_clear" 2 0
F B "bit_test" 2 0
F B "toupper" 1 0
F B "tolower" 1 0
F B "swap" 1 0
F B "printf" 1 255
F B "fprintf" 1 255
F B "sprintf" 1 255
F B "make8" 2 0
F B "make16" 2 0
F B "make32" 1 255
F B "label_address" 1 1
F B "goto_address" 1 0
F B "_va_arg" 1 0
F B "offsetofbit" 2 2
F B "enable_interrupts" 1 0
F B "disable_interrupts" 1 0
F B "interrupt_active" 1 0
F B "clear_interrupt" 1 0
F B "jump_to_isr" 1 0
F B "ext_int_edge" 1 2
F B "read_eeprom" 1 0
F B "write_eeprom" 2 0
F B "read_program_eeprom" 1 0
F B "read_program_memory" 4 0
F B "read_program_memory8" 4 0
F B "output_high" 1 0
F B "output_low" 1 0
F B "input" 1 0
F B "input_state" 1 0
F B "output_float" 1 0
F B "output_drive" 1 0
F B "output_bit" 1 1
F B "output_toggle" 1 0
F B "output_a" 1 0
F B "output_c" 1 0
F B "input_a" 0 0
F B "input_c" 0 0
F B "set_tris_a" 1 0
F B "set_tris_c" 1 0
F B "get_tris_a" 0 0
F B "get_tris_c" 0 0
F B "port_a_pullups" 1 0
F B "setup_counters" 2 0
F B "setup_wdt" 1 0
F B "restart_cause" 0 0
F B "restart_wdt" 0 0
F B "get_rtcc" 0 0
F B "set_rtcc" 1 0
F B "get_timer0" 0 0
F B "set_timer0" 1 0
F B "setup_comparator" 1 0
F B "setup_port_a" 1 0
F B "setup_adc_ports" 1 0
F B "setup_adc" 1 0
F B "set_adc_channel" 1 0
F B "read_adc" 0 1
F B "adc_done" 0 0
F B "setup_timer_0" 1 0
F B "setup_timer_1" 1 0
F B "get_timer1" 0 0
F B "set_timer1" 1 0
F B "setup_vref" 1 0
F B "setup_oscillator" 1 2
F B "delay_ms" 1 0
F B "delay_us" 1 0
